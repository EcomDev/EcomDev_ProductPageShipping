<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2014 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php
	$_product    = $this->getProduct();
	$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <dl>
    <?php foreach($_attributes as $_attribute): ?>
        <dt><label class="required"><em>*</em><?php echo $_attribute->getLabel() ?></label></dt>
        <dd <?php if ($_attribute->decoratedIsLast){?> class="last"<?php }?>>
            <div class="input-box">
                <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
                    <option><?php echo $this->__('Choose an Option...') ?></option>
                  </select>
              </div>
        </dd>
    <?php endforeach; ?>
    </dl>
    <input type="hidden" name="product_simple_id" id="product_simple_id" value=""/>
    <script type="text/javascript">
        var spConfig = new Product.Config(<?php echo $this->getJsonConfig() ?>);
        spConfig.getIdOfSelectedProduct = function () {
			var existingProducts = new Object();
			for (var i = this.settings.length - 1; i >= 0; i--) {
				var selected = this.settings[i].options[this.settings[i].selectedIndex];
				if (selected.config) {
					for (var iproducts = 0; iproducts < selected.config.products.length; iproducts++) {
						var usedAsKey = selected.config.products[iproducts] + "";
						if (existingProducts[usedAsKey] == undefined) {
							existingProducts[usedAsKey] = 1;
						} else {
							existingProducts[usedAsKey] = existingProducts[usedAsKey] + 1;
						}
					}
				}
			}
  			for (var keyValue in existingProducts) {
  				for (var keyValueInner in existingProducts) {
  					if (Number(existingProducts[keyValueInner]) < Number(existingProducts[keyValue])) {
  						delete existingProducts[keyValueInner];
  					}
  				}
  			}
  			var sizeOfExistingProducts = 0;
  			var currentSimpleProductId = "";
  			for (var keyValue in existingProducts) {
  				currentSimpleProductId = keyValue;
  				sizeOfExistingProducts = sizeOfExistingProducts + 1
  			}
  			if (sizeOfExistingProducts == 1) {
  				//console.log("Selected product is: " + currentSimpleProductId);
  				$('product_simple_id').setAttribute('value', currentSimpleProductId);
  			}
		}
    </script>
<?php endif;?>
